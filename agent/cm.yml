apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: agent
data:
  agent.yaml: |
    server:
      http_listen_port: 12345
    loki:
      positions_directory: /tmp/positions
      configs:
        - name: agent
          clients:
            - url: ${GEL_WRITE_URL}
              basic_auth:
                  username: ${GEL_WRITE_USERNAME}
                  password: ${GEL_WRITE_PASSWORD}
          scrape_configs:
            - job_name: logs-read-by-promtail
              kubernetes_sd_configs:
                - role: pod
                  namespaces:
                    names:
                      - tns
                      - sock-shop
              pipeline_stages:
                - docker: {}
              relabel_configs:
                - source_labels:
                    - __meta_kubernetes_pod_node_name
                  target_label: __host__
                - action: replace
                  source_labels:
                    - __meta_kubernetes_namespace
                  target_label: namespace
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_name
                  target_label: pod
                - replacement: /var/log/pods/*$1/*.log
                  separator: /
                  source_labels:
                    - __meta_kubernetes_pod_uid
                    - __meta_kubernetes_pod_container_name
                  target_label: __path__
    prometheus:
      configs:
        - name: agent
          host_filter: false
          remote_write:
            - url: ${GEM_WRITE_URL}
              basic_auth:
                username: ${GEM_WRITE_USERNAME}
                password: ${GEM_WRITE_PASSWORD}
          scrape_configs:
            - job_name: pods-scraped-by-agent
              kubernetes_sd_configs:
                - role: pod
                  namespaces:
                    names:
                      - tns
                      - sock-shop
              relabel_configs:
                - action: keep
                  regex: "true"
                  source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_scrape
                - action: drop
                  regex: Succeeded|Failed
                  source_labels:
                    - __meta_kubernetes_pod_phase
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_path
                  target_label: __metrics_path__
                - action: replace
                  regex: (.+?)(\:\d+)?;(\d+)
                  replacement: $1:$3
                  source_labels:
                    - __address__
                    - __meta_kubernetes_pod_annotation_prometheus_io_port
                  target_label: __address__
                - action: replace
                  source_labels:
                    - __meta_kubernetes_namespace
                  target_label: namespace
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_name
                  target_label: pod
      global:
        scrape_interval: 15s
      wal_directory: /var/lib/agent/data  
    integrations:
      node_exporter:
        enabled: true
        rootfs_path: /
        sysfs_path: /sys
        procfs_path: /proc
    tempo:
      configs:
      - name: jaeger-and-zipkin
        receivers:
          zipkin:
          jaeger:
            protocols:
              thrift_http: null
        remote_write:
          - endpoint: ${TEMPO_ENDPOINT}
            insecure: true