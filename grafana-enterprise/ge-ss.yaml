apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana-enterprise
  namespace: grafana-enterprise
spec:
  replicas: 3
  selector:
    matchLabels:
      name: grafana-enterprise
  template:
    metadata:
      labels:
        name: grafana-enterprise
    spec:
      # initContainers:
      #   - name: init-chown-data
      #     command:
      #     - chown
      #     - -R
      #     - 472:472
      #     - /var/lib/grafana
      #     image: busybox:1.31.1
      #     imagePullPolicy: IfNotPresent
      #     resources: {}
      #     securityContext:
      #       runAsNonRoot: false
      #       runAsUser: 0
      #     terminationMessagePath: /dev/termination-log
      #     terminationMessagePolicy: File
      #     volumeMounts:
      #     - mountPath: /var/lib/grafana
      #       name: data
      #     restartPolicy: Always
      #     schedulerName: default-scheduler
      #     securityContext:
      #       fsGroup: 472
      #       runAsGroup: 472
      #       runAsUser: 472
      #     serviceAccount: grafana-enterprise
      #     serviceAccountName: grafana-enterprise
      #     terminationGracePeriodSeconds: 30
      containers:
        - name: grafana-enterprise
          image: grafana/grafana-enterprise:8.2.0
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
          ports:
            - containerPort: 3000
              name: http
            - containerPort: 9094
              name: gossip
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 15
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: data
            - mountPath: /etc/grafana/grafana.ini
              name: grafana-config
              subPath: grafana.ini
            - mountPath: /etc/grafana/ldap.toml
              name: ldap-config
              subPath: ldap.toml
            - mountPath: /var/lib/grafana/license.jwt
              name: grafana-enterprise-license
              subPath: license.jwt
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: ldap-config
          confipMap:
            name: ldap-config
        - name: grafana-enterprise-license
          secret:
            secretName: grafana-enterprise-license
        - name: data
          persistentVolumeClaim:
            claimName: grafana-enterprise
  updateStrategy:
    type: RollingUpdate